kind: Namespace
apiVersion: v1
metadata:
  name: config-examples

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: message-service
  namespace: config-examples
data:
  message: "Value from K8s config"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-configmap
  namespace: config-examples
data:
  foo: "foo value"
  bar: "bar value"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-service
  namespace: config-examples
spec:
  replicas: 1
  selector:
    matchLabels:
      app: message-service
  template:
    metadata:
      labels:
        app: message-service
    spec:
      volumes:
        - name: demo-config-volume
          configMap:
            name: demo-configmap
      serviceAccountName: "message-service"
      containers:
      - image: "config-map-and-secret:0.0.1-SNAPSHOT"
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: /myconfigs
            name: demo-config-volume
        name: message-service
        ports:
          - containerPort: 8080
#        env:
#          - name: MESSAGE
#            value: "value from env var"
        livenessProbe:
          initialDelaySeconds: 10
          periodSeconds: 5
          httpGet:
            port: 8080
            path: /actuator/health/liveness
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          httpGet:
            port: 8080
            path: /actuator/health/readiness

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: message-service
  name: message-service
  namespace: config-examples
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: message-service
  type: NodePort



