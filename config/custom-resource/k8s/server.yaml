---
apiVersion: v1
kind: Namespace
metadata:
  name: greeter

#
# Define permissions to allow the greeting-server to access the api-server
# and put a watch on the Greeting Custom Resource
#
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: greeting-server-sa
  namespace: greeter
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: greetings-reader
  namespace: greeter
rules:
  - apiGroups: ["example.com"]
    resources: ["greetings"]
    verbs: ["list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: greetings-reader-binding
  namespace: greeter
subjects:
  - kind: ServiceAccount
    name: greeting-server-sa
    namespace: greeter
roleRef:
  kind: Role
  name: greetings-reader
  apiGroup: rbac.authorization.k8s.io

#
# Greeting Server Deployment
#  - the server watches for Greeting objects in the namespace it is deployed in
#  - the server exposes a Rest API to get the greeting via a NodePort service
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: greeting-server
  namespace: greeter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: greeting-server
  template:
    metadata:
      labels:
        app: greeting-server
    spec:
      serviceAccountName: greeting-server-sa
      containers:
        - name: greeting-server
          image: custom-resource:0.0.1-SNAPSHOT
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
---
apiVersion: v1
kind: Service
metadata:
  name: greeting-server-service
  namespace: greeter
spec:
  type: NodePort
  selector:
    app: greeting-server
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30036  # Fixed node port
