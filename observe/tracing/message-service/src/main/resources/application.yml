spring:
  application:
    name: message-service
  datasource:
    url: jdbc:h2:mem:my-h2-db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE


server:
  port: 8081

logging:
  pattern:
    # add span and trace ids into the log files so it easy to copy a trace id from the log file
    # into a the observability tool to locate a span or trace we want to undrestand
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"


# expose all the spring boot actuators good for demos.
# NEVER DO THIS in production
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

  tracing:
    baggage:
      remote-fields: billboardId
    sampling:
      # sends all traces to tracing server
      probability: 1.0

# For Exemplars to work we need histogram buckets
 # management.metrics.distribution.percentiles-histogram.http.server.requests=true

  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
