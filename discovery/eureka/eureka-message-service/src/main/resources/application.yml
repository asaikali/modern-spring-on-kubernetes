spring:
  application:
    name: message-service

# Set this service to start on a random port number that is not being
# used, this will allow us to launch multiple versions of the service
# and register them with Eureka for discovery
server:
  port: 0

eureka:
  client:
    serviceUrl:
      defaultZone: "http://localhost:8761/eureka/"
    fetch-registry: false # This service does not call any other service so no need to cache list of registered services
    register-with-eureka: true # This service should register itself in eureka
    healthcheck:
     enabled: true # use the spring boot health check status to indicate to eureka if the service is up
  instance:
    instance-id: ${spring.application.name}:${random.int} # unique id for app instances registered with eureka
    prefer-ip-address: true # should use ip address when running in k8s

# expose all the spring boot actuators good for demos.
# NEVER DO THIS in production
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
